name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd).$(BuildCounter)

#parameters:
#  - name: ContinueEvenIfResourcesAreGettingDestroyed
#    displayName: "Continue even if resources are getting destroyed"
#    type: boolean
#    default: false

trigger:
  - main
  - release/*

pool: $(DeploymentPool)

variables:
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell:1.0.2"
  - name: DeploymentPool
    value: "UKHO Ubuntu 1804"
  - name: WindowPool
    value: "NautilusBuild"
  - name: coverityPool
    value: NautilusBuild
  - group: Covscan-vars

resources:
  repositories:
    - repository: covscan
      type: github
      name: UKHO/coverityscan-buildtemplates
      endpoint: UKHO
      ref: refs/heads/master

stages:
  #- stage: CoverityScan
  #  displayName: "Coverity Scan"
  #  pool:
  #    name: $(coverityPool)
  #  jobs:
  #  - job: Coverity
  #    workspace:
  #      clean: all
  #    steps:
  #      - checkout: self
  #        submodules: recursive
  #      - checkout: covscan
  #      - template: typescript-cov.yml@covscan
  #        parameters:
  #          CovHostUrl: "$(CovHostUrl)"
  #          CovUser: "$(CovUser)"
  #          CovPwd: "$(CovPwd)"
  #          StreamName: "file-share-service-ui"
  #          BuildCommand: "run build"
  #          StripPath: $(Build.Repository.LocalPath)/file-share-service-ui
  #          CoverityScanPath: $(Build.Repository.LocalPath)/coverityscan-buildtemplates
  #          FsCaptureSearch: $(Build.Repository.LocalPath)/file-share-service-ui/src

  - stage: Perfrom_Build_Test_Publish
    displayName: "Build (Build ,test and publish artifact )"
    dependsOn: []
    jobs:   

     - job: BuildTestPublish
       #dependsOn: Dependencychecker
       pool: $(DeploymentPool)
       container: ${{variables.Container}}
       workspace:
         clean: all # what to clean up before the job runs outputs | resources | all
       displayName: "Build test publish"

       steps:
          - checkout: self
          
          - task: PublishBuildArtifacts@1
            displayName: "Publish terraform Artifacts"
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/Deployment'
              ArtifactName: terraformartifact

     - job: PostDeploymentActions
       pool: $(WindowPool)
       dependsOn: BuildTestPublish
       displayName: "Retain Pipeline"        
       steps:
          - template: Deployment/templates/retain_pipeline.yml    
