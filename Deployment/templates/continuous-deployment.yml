parameters:
# Continue even if resources will be destroyed.
- name: ContinueEvenIfResourcesAreGettingDestroyed
  type: boolean
# The Terraform Azure PowerShell container.
- name: Container
  type: string
# The name of the environment to be used in Azure DevOps.
- name: AzureDevOpsEnvironment
  type: string
# Used to generate job names and, in lower case, used to select the correct var/x-deploy.yml variable file.
- name: ShortName
  type: string
# Run functional tests.
- name: RunFunctionalTests
  type: boolean
  default: false
# Run E2E tests.
- name: RunE2eTests
  type: boolean
  default: false
# Run accessibilty tests.
- name: RunAccessibilityTests
  type: boolean
  default: false
# Set the pipeline retention period. Typically used after a successful live deployment.
- name: RetainPipeline
  type: boolean
  default: false

jobs:
- deployment: ${{ parameters.ShortName }}Deploy
  displayName: ${{ upper(parameters.ShortName) }} - deploy terraform and website
  environment: ${{ parameters.AzureDevOpsEnvironment }}
  container: ${{ parameters.Container }}
  workspace:
    clean: all
  variables:
  - template: var/${{ lower(parameters.ShortName) }}-deploy.yml
  - name: b2cConfig.tenantName
    value: $(b2cConfig-tenantName)
  - name: b2cConfig.clientId
    value: $(b2cConfig-clientId)
  - name: fssConfig.apiUrl
    value: $(fssConfig-apiUrl)
  - name: fssConfig.apiScope
    value: $(fssConfig-apiScope)
  - name: fssConfig.stateManagementApiUrl
    value: $(fssConfig-stateManagementApiUrl)
  - name: fssConfig.displayPopularSearch
    value: $(fssConfig-displayPopularSearch)
  - name: fssConfig.displaySimplifiedSearchLink
    value: $(fssConfig-displaySimplifiedSearchLink)
  - name: essConfig.apiUrl
    value: $(essConfig-apiUrl)
  - name: essConfig.apiScope
    value: $(essConfig-apiScope)
  - name: essConfig.defaultEstimatedSizeinMB
    value: $(essConfig-defaultEstimatedSizeinMB)
  - name: essConfig.MaxEncLimit
    value: $(essConfig-MaxEncLimit)
  - name: essConfig.MaxEncSelectionLimit
    value: $(essConfig-MaxEncSelectionLimit)
  - name: essConfig.aioExcludeEncs
    value: $(essConfig-aioExcludeEncs)
  - name: essConfig.apiUiUrl
    value: $(essConfig-apiUiUrl)
  - name: essConfig.privilegedUserDomains
    value: $(essConfig-PrivilegedUserDomains)
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          displayName: Download deployment artifact
          artifact: DeploymentScripts

        - download: current
          displayName: Download website artifact
          artifact: AngularApp

        - task: PowerShell@2
          displayName: Terraform deployment
          inputs:
            targetType: filePath
            filePath: '$(Pipeline.Workspace)/DeploymentScripts/terraform_conditional_run.ps1'
            arguments: '-DeploymentResourceGroupName $(deploymentResourceGroupName) -DeploymentStorageAccountName $(deploymentStorageAccountName) -WorkSpace $(environment) -ContinueEvenIfResourcesAreGettingDestroyed $${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}'
          env:
            ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
            ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
            ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
            TF_VAR_allowed_ips: $(whiteListedIps)
            TF_VAR_spoke_rg: $(spokeRG)
            TF_VAR_spoke_vnet_name: $(spokeVnetName)
            TF_VAR_spoke_subnet_name: $(spokeSubnetName)
            TF_VAR_agent_rg: $(agentRG)
            TF_VAR_agent_vnet_name: $(agentVnetName)
            TF_VAR_agent_subnet_name: $(agentSubnetName)
            TF_VAR_agent_subscription_id: $(agentSubscriptionId)

        - task: FileTransform@2
          displayName: File transform - website config
          inputs:
            folderPath: "$(Pipeline.Workspace)/AngularApp/ukho-fileshareservice-ui"
            enableXmlTransform: false
            xmlTransformationRules: ''
            jsonTargetFiles: '**/appconfig.json'

        - task: AzureCLI@2
          displayName: Website deployment
          inputs:
            azureSubscription: ${{ variables.AzureSubscription }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              az storage blob delete-batch -s '$web' --account-name $(website_storage_account_name)
              az storage blob upload-batch -d '$web' --account-name $(website_storage_account_name) -s "$(Pipeline.Workspace)/AngularApp/ukho-fileshareservice-ui"

        - task: PowerShell@2
          displayName: Check the status of the service
          inputs:
            targetType: filePath
            filePath: '$(Pipeline.Workspace)/DeploymentScripts/checkwebsitestatus.ps1'
            arguments: '-FssUiWebUrl $(service-dns-url) -WaitTimeInMinutes $(waitTimeInMinute)'

- ${{ if eq(parameters.RunFunctionalTests, true) }}:
  - template: playwright-testing.yml
    parameters:
      ShortName: ${{ parameters.ShortName }}
      TestName: auto
      TestDescription: functional
      TestDirectory: FunctionalTests

- ${{ if eq(parameters.RunE2eTests, true) }}:
  - template: playwright-testing.yml
    parameters:
      ShortName: ${{ parameters.ShortName }}
      TestName: e2e
      TestDescription: E2E
      TestDirectory: E2ETests

- ${{ if eq(parameters.RunAccessibilityTests, true) }}:
  - template: playwright-testing.yml
    parameters:
      ShortName: ${{ parameters.ShortName }}
      TestName: a11y
      TestDescription: accessibility
      TestDirectory: AccessibilityTests

- ${{ if eq(parameters.RetainPipeline, true) }}:
  - job: ${{ parameters.ShortName }}RetainPipeline
    displayName: ${{ upper(parameters.ShortName) }} - retain pipeline
    dependsOn:
    - ${{ parameters.ShortName }}Deploy
    pool: $(WindowPool)
    steps:  
    - checkout: UKHOTemplates
    - template: retain-pipelinerun/retain-pipelinerun.yml@UKHOTemplates
      parameters:
        DaysValid: 365
